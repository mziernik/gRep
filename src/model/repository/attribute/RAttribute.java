package model.repository.attribute;

import com.model.repository.Column;
import com.model.repository.ForeignColumn;
import com.model.repository.Repository;
import com.resources.FontAwesome;
import com.utils.date.TDate;
import com.utils.reflections.datatype.DataType;
import java.util.UUID;
import model.repository.category.RCategory;

public class RAttribute extends Repository<Integer> {

    public final static Column<Integer> ID = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.INT;
        c.key = "id";
        c.name = "ID";
        c.required = true;
        c.autoGenerated = true;
        c.readOnly = true;
        c.unique = true;
        c.hidden = true;
    });

    public final static Column<UUID> UID = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.UUID;
        c.key = "uid";
        c.name = "UID";
        c.required = true;
        c.autoGenerated = true;
        c.readOnly = true;
        c.unique = true;
        c.hidden = true;
    });

    public final static Column<TDate> CREATED = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.TIMESTAMP;
        c.key = "created";
        c.name = "Utworzono";
        c.required = true;
        c.autoGenerated = true;
        c.readOnly = true;
        c.hidden = true;
    });

    public final static Column<String> KEY = new Column<String>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.KEY;
        c.key = "key";
        c.name = "Klucz";
        c.unique = true;
        c.required = true;
    });

    public final static Column<String> NAME = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.STRING;
        c.key = "name";
        c.name = "Nazwa";
        c.required = true;
    });

    public final static Column<String> MASK = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.STRING;
        c.key = "mask";
        c.name = "Maska";
        c.hidden = true;
        c.daoName = "display_mask";
        c.hidden = true;
    });

    public final static ForeignColumn<Integer, RCategory> PARENT = new ForeignColumn<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.INT;
        c.key = "parent";
        c.name = "Rodzic";
    }, RCategory.ID);

    public final static Column<FontAwesome> ICON = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.ICON;
        c.key = "icon";
        c.name = "Ikona";
    });

    public final static Column<String> DESCRIPTION = new Column<>(c -> {
        c.repository = RAttribute.class;
        c.type = DataType.MEMO;
        c.key = "desc";
        c.daoName = "description";
        c.name = "Opis";
        c.max = 1000;
        c.hidden = true;
    });

    public RAttribute() {
        super(c -> {
            c.key = "attribute";
            c.daoName = "data.attribute";
            c.name = "Atrybut";
            c.group = "Atrybuty";
            c.primaryKey = ID;
            c.displayName = NAME;
            // c.reference("Elementy", RAttributeElements.ATTR);
        });

    }

}
