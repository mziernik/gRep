package model.repository.attribute;

import com.json.JElement;
import com.model.repository.Column;
import com.model.repository.ForeignColumn;
import com.model.repository.Repository;
import com.utils.reflections.datatype.DataType;

public class RAttributeElement extends Repository<Integer> {

    public final static Column<Integer> ID = new Column<>(c -> {
        c.repository = RAttributeElement.class;
        c.type = DataType.INT;
        c.key = "id";
        c.name = "ID";
        c.required = true;
        c.autoGenerated = true;
        c.readOnly = true;
        c.unique = true;
        c.hidden = true;
    });

    public final static ForeignColumn<Integer, RAttribute> ATTR = new ForeignColumn<>(c -> {
        c.repository = RAttributeElement.class;
        c.type = DataType.INT;
        c.key = "attr";
        c.name = "Atrybut";
        c.required = true;
    }, RAttribute.ID);

    public final static ForeignColumn<Integer, RElement> ELM = new ForeignColumn<>(c -> {
        c.repository = RAttributeElement.class;
        c.type = DataType.INT;
        c.key = "elm";
        c.name = "Element";
        c.required = true;
    }, RElement.ID);

    public final static Column<JElement> DEF_VAL = new Column<>(c -> {
        c.repository = RAttributeElement.class;
        c.type = DataType.JSON;
        c.key = "defVal";
        c.name = "Wartość domyslna";
    });

    public final static Column<Boolean> REQUIRED = new Column<>(c -> {
        c.repository = RAttributeElement.class;
        c.type = DataType.BOOLEAN;
        c.key = "required";
        c.name = "Wymagane";
    });

    public RAttributeElement() {
        super(c -> {
            c.key = "attrElm";
            c.daoName = "data.attribute_element";
            c.name = "Element atrybutu";
            c.group = "Atrybuty";
        //    c.displayName = ELM;
            c.displayMask = "${attr} - ${elm}";
            c.primaryKey = ID;
        });

    }

}
